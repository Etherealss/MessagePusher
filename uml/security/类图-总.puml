@startuml
'https://plantuml.com/class-diagram
skinparam shadowing false
skinparam defaultFontName xfonts-wqy
skinparam dpi 300
skinparam activity  {
    DiamondFontSize 14
    ArrowFontSize 14
    FontSize 14
}

abstract class CredentialCacheHandler {
    - RedisTemplate<String, TokenCredential> redisTemplate
    # {abstract} String getCacheKey(String token)
    # {abstract} TokenCredential verifyAndGetCredential(String token)
    + <T extends TokenCredential> T verifyAndGet(String token)
    - <T extends TokenCredential> TokenCredential getByRemote(String token, String key)
    - void cacheCredential(String key, TokenCredential value, Date expireAt)
    + <T> void invalidCache(String token)
}
note left of CredentialCacheHandler:凭证缓存控制器
CredentialCacheHandler --> RedisTemplate: Redis操作
class RedisTemplate
note left of RedisTemplate: 封装Redis操作

class ServerCredentialCacheHandler extends CredentialCacheHandler {
    - ServerCredentialConfig serverCredentialConfig
    - ServerCredentialFeign serverCredentialFeign
    # String getCacheKey(String token)
    # TokenCredential verifyAndGetCredential(String token)
}
note left of ServerCredentialCacheHandler: 服务凭证缓存
ServerCredentialCacheHandler --> ServerCredentialFeign: 远程访问Auth服务
interface ServerCredentialFeign {
    ServerTokenCredential verify(String token)
    ServerTokenCredential createCredential(ServerAuthCommand)
}
note left of ServerCredentialFeign: OpenFeign远程调用


interface ICredentialVerifier<T extends TokenCredential> {
    T verify(String token)
}
note right of ICredentialVerifier: token校验
class RemoteServerCredentialVerifier<ServerTokenCredential> implements ICredentialVerifier {
    - ServerCredentialCacheHandler credentialCacheHandler
    - ServerTokenCredential verify(String token)
}
RemoteServerCredentialVerifier --> ServerCredentialCacheHandler
note bottom of RemoteServerCredentialVerifier: 通过远程调用进行token校验

class LocalServerCredentialVerifier<ServerTokenCredential> implements ICredentialVerifier {
    - TokenCredentialService tokenCredentialService
    - ServerCredentialAuthConfig serverCredentialAuthConfig
    - ServerTokenCredential verify(String token)
}
note bottom of LocalServerCredentialVerifier: 通过本地方法进行token校验

class CurServerAuthenticationHolder {
    - ServerTokenCredential serverTokenCredential
    - IServerCredentialProvider serverCredentialProvider
    + ServerTokenCredential get()
}

CurServerAuthenticationHolder --> IServerCredentialProvider: 获取服务凭证

interface IServerCredentialProvider {
    ServerTokenCredential create();
}

class RemoteIServerCredentialProvider implements IServerCredentialProvider {
    - ServerCredentialFeign serverCredentialFeign;
    - ServerCredentialConfig config;
    - RedisTemplate<String, ServerTokenCredential> redisTemplate;
    - ServerDigestGenerator serverDigestGenerator;
    + ServerTokenCredential create()
}
RemoteIServerCredentialProvider --> RedisTemplate: 缓存远程调用得到的token
RemoteIServerCredentialProvider --> ServerDigestGenerator
RemoteIServerCredentialProvider --> ServerCredentialConfig

class LocalServerCredentialProvider implements IServerCredentialProvider {
    - ServerCredentialConfig serverCredentialConfig;
    - ServerAuthenticationAppService serverAuthenticationAppService;
    - ServerDigestGenerator serverDigestGenerator;
}
LocalServerCredentialProvider --> ServerCredentialConfig
LocalServerCredentialProvider --> ServerDigestGenerator

class ServerTokenFeignRequestInterceptor {
    - ServerCredentialConfig config;
    - CurServerAuthenticationHolder curServerAuthenticationHolder;
}
note left of ServerTokenFeignRequestInterceptor: 远程调用拦截器

ServerTokenFeignRequestInterceptor --> CurServerAuthenticationHolder: 在进行远程调用时自动装配本服务的token

interface IPreAuthHandler {
    + boolean checkNeedAuth(Method method);
    + void doAuth(Method method);
}
class PreAuthAspect {
    - List<IPreAuthHandler> preAuthHandlers;
}
note right of PreAuthAspect: AOP拦截请求，验证token
PreAuthAspect --> IPreAuthHandler: 验证器
note right of IPreAuthHandler: 验证器

class ServerPreAuthHandler implements IPreAuthHandler {
    - ServerCredentialConfig serverCredentialConfig;
    + boolean checkNeedAuth(Method method);
    + void doAuth(Method method);
}
note right of ServerPreAuthHandler: 服务凭证验证器实现类
ServerPreAuthHandler --> ServerCredentialConfig: 服务凭证验证相关配置

class ServerCredentialConfig {
    - String headerName;
    - Long serverId;
    - String serverName;
    - String secret;
    - String cacheKey;
}

@enduml